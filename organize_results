#!/bin/bash
# Script to organize the output XML data from the quantitative segmentation metrics.

usage(){
  echo "  Script to organize the output XML data from the quantitative segmentation metrics."
  # echo "    Usage: $(basename $0) [options] <T1 folder path> <Manual brain masks folder>"
  echo "    Usage: $(basename $0) <Manual brain masks folder>"
  echo ""
  echo "    <T1 folder path> = Set a folder path which contains all the T1 data to the study."
  echo "    <Manual brain masks folder> = Set a folder path which contains all the manual brain segmentation data to the study."
  echo ""
  # echo "    Options:"
  # echo "      -n      Remove neck slices on T1 images"
  # echo "      -i      Correct inhomogeneity on T1 images"
  # echo "      -v      Voxel intensity normalization on T1 images"
}
if [[ $# -lt 1 ]]; then
  usage
  exit
fi

# MASK_FOLDER=$1
MASK_FOLDER=$1
LIST_T1_GROUND=`ls $MASK_FOLDER | grep -v _bm`
LIST_MASK_AUTO=`ls $MASK_FOLDER | grep _bm`

for mask_auto in $LIST_MASK_AUTO; do
  for ground in $LIST_T1_GROUND;do
    # echo "Ground image: $ground  -  Mask: $mask_auto"
    if [[ `echo "${mask_auto%.*.*}" | cut -c1-10`  == `echo "${ground%.*.*}" | cut -c1-10` ]]; then
          echo "Ground image: $ground  -  Mask: $mask_auto"
      /home/antonio/Documents/EvaluateSegmentation/EvaluateSegmentation $MASK_FOLDER/$ground $MASK_FOLDER/$mask_auto -use all > $MASK_FOLDER/${mask_auto%.*.*}.txt
    fi
  done
done

# Reorganize the metric output tables
printf "mask,DICE,JACRD,AUC,KAPPA,RNDIND,ADJRIND,ICCORR,VOLSMTY,MUTINF,MAHLNBS,AVGDIST,HDRFDST,VARINFO,GCOERR,PROBDST,SNSVTY,SPCFTY,PRCISON,FMEASR,ACURCY,FALLOUT" >> $MASK_FOLDER/segmentation_metrics.csv
printf "\n" >> $MASK_FOLDER/segmentation_metrics.csv
for file in `ls $MASK_FOLDER | grep .txt`; do
  echo "Organizing output file: $file"
  # File name
  printf "${file%.*}" >> $MASK_FOLDER/segmentation_metrics.csv
  printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #DICE
  printf "`cat $MASK_FOLDER/$file | grep DICE | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #JACRD
  printf "`cat $MASK_FOLDER/$file | grep JACRD | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #AUC
  printf "`cat $MASK_FOLDER/$file | grep AUC | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #KAPPA
  printf "`cat $MASK_FOLDER/$file | grep KAPPA | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #RNDIND
  printf "`cat $MASK_FOLDER/$file | grep RNDIND | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
  #ADJRIND
  printf "`cat $MASK_FOLDER/$file | grep ADJRIND | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
    #ICCORR
    printf "`cat $MASK_FOLDER/$file | grep ICCORR | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
      printf "," >> $MASK_FOLDER/segmentation_metrics.csv
      #VOLSMTY
      printf "`cat $MASK_FOLDER/$file | grep VOLSMTY | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
        printf "," >> $MASK_FOLDER/segmentation_metrics.csv
        #MUTINF
        printf "`cat $MASK_FOLDER/$file | grep MUTINF | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
          printf "," >> $MASK_FOLDER/segmentation_metrics.csv
          #HDRFDST
          printf "`cat $MASK_FOLDER/$file | grep HDRFDST | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
            printf "," >> $MASK_FOLDER/segmentation_metrics.csv
            #AVGDIST
            printf "`cat $MASK_FOLDER/$file | grep AVGDIST | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
              printf "," >> $MASK_FOLDER/segmentation_metrics.csv
              #MAHLNBS
              printf "`cat $MASK_FOLDER/$file | grep MAHLNBS | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                #VARINFO
                printf "`cat $MASK_FOLDER/$file | grep VARINFO | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                  printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                  #GCOERR
                  printf "`cat $MASK_FOLDER/$file | grep GCOERR | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                    printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                    #PROBDST
                    printf "`cat $MASK_FOLDER/$file | grep PROBDST | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                      printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                      #SNSVTY
                      printf "`cat $MASK_FOLDER/$file | grep SNSVTY | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                        printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                        #SPCFTY
                        printf "`cat $MASK_FOLDER/$file | grep SPCFTY | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                          printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                          #PRCISON
                          printf "`cat $MASK_FOLDER/$file | grep PRCISON | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                            printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                            #FMEASR
                            printf "`cat $MASK_FOLDER/$file | grep FMEASR | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                              printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                              #ACURCY
                              printf "`cat $MASK_FOLDER/$file | grep ACURCY | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                                printf "," >> $MASK_FOLDER/segmentation_metrics.csv
                                #FALLOUT
                                printf "`cat $MASK_FOLDER/$file | grep FALLOUT | awk '{print $3}'`" >> $MASK_FOLDER/segmentation_metrics.csv
                                  printf "\n" >> $MASK_FOLDER/segmentation_metrics.csv
done

# Excluding old format results
rm $MASK_FOLDER/*.txt

# # Saving tables in other folder
# if [[ ! -d $MASK_FOLDER/results ]]; then
#   mkdir $MASK_FOLDER/results
# fi
# for i in `ls $MASK_FOLDER | grep .csv`; do
#   mv $MASK_FOLDER/$i $MASK_FOLDER/results
# done
